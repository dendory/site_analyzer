name: Deploy to AWS ECS

on:
  push:
    branches:
      - test

env:
  AWS_REGION: us-west-1
  ECR_REPOSITORY: site_analyzer
  ECS_CLUSTER: dendory_test
  ECS_SERVICE: site_analyzer
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: ./front_end
          dockerfile: ./front_end/Dockerfile
          push: true
          tags: ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Update Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task@v1
        with:
          cluster: ${{ env.ECS_CLUSTER }}
          service: ${{ env.ECS_SERVICE }}
          task_definition: '{"family": "${{ env.ECS_SERVICE }}", "containerDefinitions": [{"name": "${{ env.ECS_SERVICE }}", "image": "${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}", "essential": true}], "networkMode": "awsvpc", "executionRoleArn": "arn:aws:iam::AWS_ACCOUNT_ID:role/ecsTaskExecutionRole", "requiresCompatibilities": ["FARGATE"], "cpu": "256", "memory": "512"}'
